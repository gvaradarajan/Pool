{"version":3,"sources":["webpack:///webpack/bootstrap 582935566bd112e61640","webpack:///./lib/pool.js","webpack:///./lib/ball.js","webpack:///./lib/movingObject.js","webpack:///./lib/vector.js","webpack:///./lib/util.js","webpack:///./lib/game.js","webpack:///./lib/gameView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA,oDAAmD;AACnD,4BAA2B;AAC3B;AACA;AACA,qDAAoD;AACpD,4BAA2B;AAC3B;AACA;AACA,qDAAoD;AACpD,4BAA2B;AAC3B;AACA;AACA,qDAAoD;AACpD,4BAA2B;AAC3B;AACA;AACA,qDAAoD;AACpD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3DA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;AAOA;;;;;;;;ACnLA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;;AAEA;;;AAGA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;AACrB,2BAA0B;AAC1B;AACA;AACA,sBAAqB;AACrB,2BAA0B;AAC1B;AACA;AACA,sBAAqB;AACrB,2BAA0B;AAC1B;AACA;AACA,sBAAqB;AACrB,2BAA0B;AAC1B;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAqB,uCAAuC;AAC5D,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAgB,uBAAuB;AACvC;AACA,mBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,mBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;;AAEA;AACA,iBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;;AAEA;;;;;;;AC7MA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 582935566bd112e61640\n **/","var Ball = require('./ball.js');\nvar Vector = require('./vector.js');\nvar Game = require('./game.js');\nvar GameView = require('./gameView.js');\nvar Util = require('./util.js');\n\n// ratio of ball to length 1:42\n// ratio of width to length 1:2\n\nvar canvas = document.getElementById('canvas');\nvar c = canvas.getContext('2d');\n\n// var newObj = new Ball({pos: [170, 200],\n//                                vel: new Vector(0, 0),\n//                                radius: 20,\n//                                color: \"#00FF00\"});\n// var newObj2 = new Ball({pos: [200, 600],\n//                                 vel: new Vector(0, 0),\n//                                 radius: 20,\n//                                 color: \"#FFFFFF\"});\n// var newObj3 = new Ball({pos: [230, 200],\n//                                 vel: new Vector(0, 0),\n//                                 radius: 20,\n//                                 color: \"#FFF000\"});\n// var newObj4 = new Ball({pos: [200, 242],\n//                                 vel: new Vector(0, 0),\n//                                 radius: 20,\n//                                 color: \"#FF0000\"});\n// var newObj5 = new Ball({pos: [30, 700],\n//                                 vel: new Vector(0, 0),\n//                                 radius: 20,\n//                                 color: \"#FFF000\"});\nvar game = new Game();\n\nvar modalIsOpen = true;\n\nvar closeModal = function (e) {\n  // debugger\n  document.getElementsByClassName('modal')[0].classList.add('close');\n  modalIsOpen = false;\n  e.currentTarget.removeEventListener(\"click\", closeModal);\n};\n\n// debugger\n\ndocument.getElementsByClassName('close-badge')[0].addEventListener(\"click\", closeModal);\n\n\n// while (modalIsOpen) {\n//\n// }\n\n// game.addBall(newObj);\n// game.addBall(newObj2);\n// game.addBall(newObj3);\n// game.addBall(newObj4);\n// game.addBall(newObj5);\nvar gameView = new GameView(game, c);\ngameView.startView();\n// gameView.play();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/pool.js\n ** module id = 0\n ** module chunks = 0\n **/","var MovingObject = require('./movingObject.js');\nvar Util = require('./util.js');\n\nvar DEFAULTS = {\n  RADIUS: 20\n};\n\nvar Ball = function (options)  {\n  options.radius = DEFAULTS.RADIUS;\n  MovingObject.call(this, options);\n};\n\nUtil.inherits(Ball, MovingObject);\n\nmodule.exports = Ball;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ball.js\n ** module id = 1\n ** module chunks = 0\n **/","\nvar Vector = require('./vector.js');\n\nvar _trunc = function (num) {\n  if (num === null) return num;\n  return parseFloat(num.toFixed(4));\n};\n\nvar MovingObject = function (settings) {\n  this.pos = settings.pos;\n  this.vel = settings.vel;\n  this.radius = settings.radius;\n  this.color = settings.color;\n};\n\nMovingObject.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, false);\n  ctx.fill();\n};\n\n// MovingObject.prototype.holeDraw = function (ctx) {\n//   ctx.fillStyle = this.color;\n//   ctx.beginPath();\n//   ctx.arc(this.pos[0], this.pos[1], this.radius, 0, -Math.PI, false);\n//   ctx.fill();\n// };\n\nMovingObject.prototype.equals = function (otherObj) {\n  // if (otherObj === undefined) {\n  //   debugger\n  // }\n  if (this.pos[0] === otherObj.pos[0] && this.pos[1] === otherObj.pos[1]) {\n    return true;\n  }\n  return false;\n};\n\nMovingObject.prototype.move = function (coeffFriction, dimX, dimY) {\n  this.radius = 20;\n  coeffFriction = coeffFriction || 0;\n  var that = this;\n  this.pos[0] += this.vel[0];\n  this.pos[1] += this.vel[1];\n  var Ybound = dimY - this.radius;\n  var Xbound = dimX - this.radius;\n  var dimXRef = this.pos[0] > Xbound || this.pos[0] < 0 + this.radius;\n  var dimYRef = this.pos[1] > Ybound || this.pos[1] < 0 + this.radius;\n  if (dimXRef || dimYRef) {\n    this.pos[0] -= this.vel[0];\n    this.pos[1] -= this.vel[1];\n    this.bounce(dimXRef, dimYRef);\n  }\n  this.vel[0] = this.vel[0] * Math.sqrt(1 - coeffFriction);\n  this.vel[1] = this.vel[1] * Math.sqrt(1 - coeffFriction);\n};\n\nMovingObject.prototype.bounce = function (bounceX, bounceY) {\n  this.vel[0] = bounceX ? -this.vel[0] : this.vel[0];\n  this.vel[1] = bounceY ? -this.vel[1] : this.vel[1];\n};\n\nMovingObject.prototype.getCollisionAngle = function (otherObj) {\n  return this.vel.getRelativeAngle(otherObj.vel);\n};\n\nMovingObject.prototype.isCollidedWith = function (otherObj) {\n  var distance = new Vector(otherObj.pos[0] - this.pos[0], otherObj.pos[1] - this.pos[1]);\n  if (distance.mag() <= (this.radius + otherObj.radius)) {\n    return true;\n  }\n  return false;\n};\n\nMovingObject.prototype.isGlancingWith = function (otherObj) {\n  var collAngle = _trunc(this.getCollisionAngle(otherObj));\n  if (collAngle === _trunc(Math.PI) || collAngle === 0) {\n    var connVec = new Vector(this.pos[0] - otherObj.pos[0], this.pos[1] - otherObj.pos[1]);\n    var connVecAngle = _trunc(connVec.findTheta());\n    if (connVecAngle !== _trunc(Math.PI) && connVecAngle !== 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n\nMovingObject.prototype.isStationary = function () {\n  if (this.vel.mag() < 0.07) {\n    return true;\n  }\n  return false;\n};\n\nMovingObject.prototype.handleCollision = function (otherObj) {\n  var connVec = new Vector(this.pos[0] - otherObj.pos[0],\n                           this.pos[1] - otherObj.pos[1]);\n  var resultRotation = connVec.findTheta();\n\n  var mass1 = 50;\n  var mass2 = 50;\n\n\n  var thisVel = this.vel.rotate(resultRotation);\n  var otherVel = otherObj.vel.rotate(resultRotation);\n\n\n  var angle1 = thisVel.findTheta();\n  var angle2 = otherVel.findTheta();\n\n  // var collAngle = angle1 === angle2 ? 0 : Math.PI;\n  var collAngle = Math.PI;\n\n  // debugger\n\n  this.vel[0] = thisVel.mag() *\n                _trunc(Math.cos(angle1-collAngle)) *\n                (mass1 - mass2);\n\n  this.vel[0] += 2 * mass2 * otherVel.mag() *\n                 _trunc(Math.cos(angle2-collAngle));\n\n  this.vel[1] = thisVel.mag() *\n                _trunc(Math.cos(angle1-collAngle)) *\n                (mass1 - mass2);\n\n  this.vel[1] += 2 * mass2 * otherVel.mag() *\n                 _trunc(Math.cos(angle2-collAngle));\n\n  this.vel[0] = _trunc(this.vel[0] / (mass1 + mass2)) * _trunc(Math.cos(collAngle));\n  this.vel[0] += thisVel.mag() *\n                 _trunc(Math.sin(angle1 - collAngle)) *\n                 _trunc(Math.cos(collAngle + (Math.PI / 2)));\n\n  this.vel[1] = _trunc(this.vel[1] / (mass1 + mass2)) * _trunc(Math.sin(collAngle));\n  this.vel[1] += thisVel.mag() *\n                 _trunc(Math.sin(angle1 - collAngle)) *\n                 _trunc(Math.sin(collAngle + (Math.PI / 2)));\n\n  otherObj.vel[0] = otherVel.mag() *\n                _trunc(Math.cos(angle2-collAngle)) *\n                (mass1 - mass2);\n\n  otherObj.vel[0] += 2 * mass2 * thisVel.mag() *\n                 _trunc(Math.cos(angle1-collAngle));\n\n  otherObj.vel[1] = otherVel.mag() *\n                _trunc(Math.cos(angle2-collAngle)) *\n                (mass1 - mass2);\n\n  otherObj.vel[1] += 2 * mass2 * thisVel.mag() *\n                 _trunc(Math.cos(angle1-collAngle));\n\n  otherObj.vel[0] = _trunc(otherObj.vel[0] / (mass1 + mass2)) * _trunc(Math.cos(collAngle));\n  otherObj.vel[0] += otherVel.mag() *\n                     _trunc(Math.sin(angle2 - collAngle)) *\n                     _trunc(Math.cos(collAngle + (Math.PI / 2)));\n\n  otherObj.vel[1] = _trunc(otherObj.vel[1] / (mass1 + mass2)) * _trunc(Math.sin(collAngle));\n  otherObj.vel[1] += otherVel.mag() *\n                     _trunc(Math.sin(angle2 - collAngle)) *\n                     _trunc(Math.sin(collAngle + (Math.PI / 2)));\n\n  otherObj.vel[1] = -otherObj.vel[1];\n  this.vel[1] = -this.vel[1];\n\n  this.vel = this.vel.rotate(-resultRotation);\n  otherObj.vel = otherObj.vel.rotate(-resultRotation);\n\n  // debugger\n\n};\n\n\n\n\n\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/movingObject.js\n ** module id = 2\n ** module chunks = 0\n **/","\nvar Vector = function (x, y) {\n  this[0] = x;\n  this[1] = y;\n};\n\nvar _trunc = function (num) {\n  return parseFloat(num.toFixed(4));\n};\n\n\nVector.prototype.findTheta = function () {\n  if (this[0] === 0) {\n    if (this[1] > 0) {\n      return Math.PI / 2;\n    }\n    else if (this[1] === 0) {\n      return 0;\n    }\n    else {\n      return -Math.PI / 2;\n    }\n  }\n  if (this[1] === 0) {\n    if (this[0] > 0) {\n      return 0;\n    }\n    else {\n      return Math.PI;\n    }\n  }\n  if (this[0] > 0) {\n    return Math.atan(-this[1] / this[0]);\n  }\n  else {\n    return Math.atan(-this[1] / this[0]) + Math.PI;\n  }\n};\n\nVector.prototype.scalarProd = function (vec) {\n  return (this[0] * vec[0]) + (this[1] * vec[1]);\n};\n\nVector.prototype.norm = function () {\n  return Math.pow(this[0], 2) + Math.pow(this[1], 2);\n};\n\nVector.prototype.mag = function () {\n  return Math.sqrt(this.norm());\n};\n\nVector.prototype.getRelativeAngle = function (vec) {\n  if (vec.norm() === 0 || this.norm() === 0) {\n    return null;\n  }\n  var denom = (Math.sqrt(this.norm()) * Math.sqrt(vec.norm()));\n  var innerVal = this.scalarProd(vec) / denom;\n  if (_trunc(innerVal) === 1) {\n    if (this.norm() === vec.norm()) {\n      return 0;\n    }\n    return false;\n  }\n  return Math.acos(_trunc(innerVal));\n};\n\nVector.prototype.rotate = function (angle) {\n  var newX = this[0] * Math.cos(angle) - this[1] * Math.sin(angle);\n  var newY = this[0] * Math.sin(angle) + this[1] * Math.cos(angle);\n  // var newY = this[0] * Math.sin(angle) - this[1] * Math.cos(angle);\n  return new Vector(newX, newY);\n};\n\nmodule.exports = Vector;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/vector.js\n ** module id = 3\n ** module chunks = 0\n **/","var Vector = require('./vector.js');\n\nvar Util = {\n  WIDTH: 750,\n  HEIGHT: 750,\n\n  inherits: function (ChildClass, ParentClass) {\n    var surrogate = function () {};\n    surrogate.prototype = ParentClass.prototype;\n    ChildClass.prototype = new surrogate();\n    ChildClass.prototype.constructor = ChildClass;\n  },\n\n  randomVec: function (length) {\n    var dir = Math.random() * 2 * Math.PI;\n    return new Vector(length * Math.cos(dir), length * Math.sin(dir));\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 4\n ** module chunks = 0\n **/","var Ball = require('./ball.js');\nvar Vector = require('./vector.js');\n\nvar _holesPos = [[10, 10], [390, 10], [10, 740], [390, 740]];\n\n\nvar Game = function () {\n  var newObj = new Ball({pos: [170, 200],\n    vel: new Vector(0, 0),\n    radius: 20,\n    color: \"#00FF00\"});\n  var newObj2 = new Ball({pos: [200, 600],\n    vel: new Vector(0, 0),\n    radius: 20,\n    color: \"#FFFFFF\"});\n  var newObj3 = new Ball({pos: [230, 200],\n    vel: new Vector(0, 0),\n    radius: 20,\n    color: \"#FFF000\"});\n  var newObj4 = new Ball({pos: [200, 242],\n    vel: new Vector(0, 0),\n    radius: 20,\n    color: \"#FF0000\"});\n  var newObj5 = new Ball({pos: [30, 700],\n    vel: new Vector(0, 0),\n    radius: 20,\n    color: \"#FFF000\"});\n  this.makingMove = false;\n  this.balls = [newObj, newObj2, newObj3, newObj4];\n  this.DIM_X = 400;\n  this.DIM_Y = 750;\n  this.holes = _holesPos.map(function (pos) {\n    return new Ball({pos: pos, radius: 20, color: \"#000000\"});\n  });\n};\n\nGame.prototype.addBall = function (ball) {\n  this.balls.push(ball);\n};\n\nGame.prototype.draw = function (ctx) {\n  this.holes.forEach(function (hole) {\n    hole.draw(ctx);\n  });\n  this.balls.forEach(function (ball) {\n    ball.draw(ctx);\n  });\n  // this.drawStick(200, 20, Math.PI / 4, ctx);\n};\n\nGame.prototype.drawStick = function (pointX, pointY, angle, ctx) {\n  var stickCorners = [];\n  var recAngle = angle - (Math.PI / 2);\n\n\n  ctx.fillStyle = \"#ad8508\";\n  ctx.moveTo(pointX, pointY);\n  pointX += 2.5 * Math.cos(recAngle);\n  pointY -= 2.5 * Math.sin(recAngle);\n  stickCorners.push([pointX, pointY]);\n  ctx.lineTo(pointX, pointY);\n  pointX += 300 * Math.cos(angle);\n  pointY -= 300 * Math.sin(angle);\n  stickCorners.push([pointX, pointY]);\n  ctx.lineTo(pointX, pointY);\n  pointX += 5 * Math.cos(recAngle + Math.PI);\n  pointY -= 5 * Math.sin(recAngle + Math.PI);\n  stickCorners.push([pointX, pointY]);\n  ctx.lineTo(pointX, pointY);\n  pointX += 300 * Math.cos(angle + Math.PI);\n  pointY -= 300 * Math.sin(angle + Math.PI);\n  stickCorners.push([pointX, pointY]);\n  ctx.lineTo(pointX, pointY);\n  pointX += 2.5 * Math.cos(recAngle);\n  pointY -= 2.5 * Math.sin(recAngle);\n  stickCorners.push([pointX, pointY]);\n  ctx.lineTo(pointX, pointY);\n  ctx.fill();\n};\n\nGame.prototype.moveObjects = function () {\n  document.getElementsByClassName(\"game-status\")[0].innerHTML = \"\";\n  // var t1 = Date.now();\n  this.balls.forEach(function (ball) {\n    ball.move(0.02, this.DIM_X, this.DIM_Y);\n  }.bind(this));\n  // console.log(Date.now() - t1);\n};\n\nGame.prototype.handleCollisions = function () {\n  var unchecked = this.balls.slice();\n  for(var i = 0; i < this.balls.length; i++) {\n    unchecked.shift();\n    for(var j = 0; j < unchecked.length; j++) {\n      if (unchecked.length === 0) continue;\n      if (this.balls[i].isCollidedWith(unchecked[j])) {\n        this.balls[i].handleCollision(unchecked[j]);\n      }\n    }\n  }\n};\n\n\n\nGame.prototype.checkPockets = function () {\n  var deleteIndices = [];\n  this.balls.forEach(function (ball, idx) {\n    for(var i = 0; i < this.holes.length; i++) {\n      if (ball.isCollidedWith(this.holes[i])) {\n        deleteIndices.push(idx);\n        continue;\n      }\n    }\n  }.bind(this));\n  deleteIndices.forEach(function (idx) {\n    this.balls.splice(idx, 1);\n  }.bind(this));\n};\n\nGame.prototype.isStationary = function () {\n  for(var i = 0; i < this.balls.length; i++) {\n    if (!this.balls[i].isStationary()) {\n      return false;\n    }\n  }\n  return true;\n};\n\nGame.prototype.getCueBall = function () {\n  for(var i = 0; i < this.balls.length; i++) {\n    if (this.balls[i].color === \"#FFFFFF\") return this.balls[i];\n  }\n  return false;\n};\n\nGame.prototype.getCueBallBounds = function () {\n  var cueBall = null;\n  this.balls.forEach(function (ball) {\n    if (ball.color === \"#FFFFFF\") cueBall = ball;\n  });\n  return [[cueBall.pos[0] - cueBall.radius, cueBall.pos[0] + cueBall.radius],\n          [cueBall.pos[1] + cueBall.radius, cueBall.pos[1] - cueBall.radius]];\n};\n\nGame.prototype.victory = function () {\n  if (this.balls.length === 1) return true;\n  return false;\n};\n\n\nGame.prototype.playerMove = function (callback, ctx) {\n  if (!this.isStationary()) return;\n\n  var canvas = document.getElementsByTagName(\"canvas\")[0];\n\n  var holdDown = function (ctx, e) {\n    var newOrigin = [canvas.getBoundingClientRect().left, canvas.getBoundingClientRect().top];\n    // if (this.makingMove || !this.isStationary()) {\n    if (!this.isStationary()) {\n      canvas.removeEventListener(\"mousedown\", holdDown);\n      return;\n    }\n\n    var cueBall = this.getCueBall();\n    var bounds = cueBall ? this.getCueBallBounds() : [[0,0],[0,0]];\n    var clickCoords = [e.clientX - newOrigin[0], e.clientY - newOrigin[1]];\n    if (clickCoords[0] <= bounds[0][1] &&\n        clickCoords[0] >= bounds[0][0] &&\n        clickCoords[1] >= bounds[1][1] &&\n        clickCoords[1] <= bounds[1][0]) {\n\n\n      var moveStick = function (ctx, e3) {\n        ctx.clearRect(0, 0, this.DIM_X, this.DIM_Y);\n        ctx.fillStyle = \"#0B610B\";\n        ctx.fillRect(0, 0, 400, 750);\n        this.draw(ctx);\n        var x = e3.clientX - newOrigin[0];\n        var y = e3.clientY - newOrigin[1];\n        var stickAxis = new Vector(x - cueBall.pos[0], y - cueBall.pos[1]);\n        this.drawStick(x, y, stickAxis.findTheta(), ctx);\n      }.bind(this, ctx);\n\n\n      var letGo = function (e2) {\n        var cueBall = this.getCueBall();\n        this.makingMove = true;\n        cueBall.vel[0] = (cueBall.pos[0] - e2.clientX + newOrigin[0]) / 10;\n        cueBall.vel[1] = (cueBall.pos[1] - e2.clientY + newOrigin[1]) / 10;\n        canvas.removeEventListener(\"mousemove\", moveStick);\n        canvas.removeEventListener(\"mouseup\", letGo);\n        callback();\n      }.bind(this);\n\n      canvas.addEventListener(\"mousemove\", moveStick);\n\n      canvas.addEventListener(\"mouseup\", letGo);\n      canvas.removeEventListener(\"mousedown\", holdDown);\n    }\n  }.bind(this, ctx);\n\n\n  canvas.addEventListener(\"mousedown\", holdDown);\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 5\n ** module chunks = 0\n **/","var Game = require('./game.js');\n\nvar GameView = function (game, ctx) {\n  this.game = game;\n  this.ctx = ctx;\n};\n\n\nGameView.prototype.startView = function () {\n  document.getElementById(\"restart\").style.display = \"none\";\n  var gameState = setInterval(function () {\n    this.game.checkPockets();\n    this.ctx.clearRect(0, 0, this.game.DIM_X, this.game.DIM_Y);\n    this.ctx.fillStyle = \"#0B610B\";\n    this.ctx.fillRect(0, 0, this.game.DIM_X, this.game.DIM_Y);\n    this.game.draw(this.ctx);\n    this.game.handleCollisions();\n    this.game.moveObjects();\n    if (this.game.isStationary()) {\n      clearInterval(gameState);\n      // this.game.makingMove = false;\n      document.getElementsByClassName(\"game-status\")[0].innerHTML = \"READY\";\n      this.play();\n    }\n  }.bind(this), 20);\n};\n\nGameView.prototype.playerTurn = function (callback) {\n  // var cueBall = this.game.cueBall();\n  this.game.playerMove(callback, this.ctx);\n};\n\nGameView.prototype.restart = function () {\n  this.game = new Game();\n  var replay = document.getElementById(\"restart\");\n  replay.style.display = \"block\";\n  replay.addEventListener('click', this.startView.bind(this));\n  // debugger\n};\n\nGameView.prototype.play = function () {\n  if (!this.game.getCueBall()) {\n    document.getElementsByClassName(\"game-status\")[0].innerHTML = \"YOU LOST\";\n    this.restart();\n    return;\n  }\n  if (this.game.isStationary() && !this.game.victory()) {\n    this.playerTurn(this.startView.bind(this));\n  }\n  else {\n    var status = document.getElementsByClassName(\"game-status\")[0];\n    status.innerHTML = \"CONGRATULATIONS! YOU WON!\";\n    this.restart();\n  }\n};\n\n\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/gameView.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}